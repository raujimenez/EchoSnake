{"version":3,"sources":["context/GameInfoContext.jsx","components/HeaderBar.jsx","components/helper/boardGenerator.js","components/helper/pointOnBody.js","components/helper/generateFruit.js","components/GridPoint.jsx","components/helper/createGridPoints.jsx","components/helper/addPortalPoint.js","components/helper/addFruitPoint.js","components/helper/addBodyPoints.js","components/helper/pointInBoard.js","components/GameBoard.jsx","components/BugReportDialog.jsx","components/GameOptions.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GameInfoContext","React","createContext","timeHook","heightHook","widthHook","drawerHook","themeHook","useStyles","makeStyles","theme","root","flexGrow","gridRow","gridColumn","menuButton","marginRight","spacing","rightButton","title","Alert","props","elevation","variant","HeaderBar","classes","useContext","useState","setTheme","open","setOpen","handleClose","event","reason","svgFill","textColor","bgColor","className","AppBar","position","color","style","backgroundColor","Toolbar","IconButton","edge","aria-label","onClick","fill","Typography","navigator","clipboard","writeText","window","location","href","target","Snackbar","autoHideDuration","onClose","severity","boardGenerator","height","width","board","i","j","row","column","isBody","isFruit","isPortal","pointOn","bodyPoints","pointX","pointY","bodyPoint","generateFruit","spawnedOnBody","finalX","finalY","potentialX","Math","floor","random","potentialY","GridPoint","col","containsBody","body","containsFruit","fruit","portalDestination","GridPointStyles","padding","borderStyle","borderWidth","createGridPoints","fruitPoint","gridPoints","length","push","key","addPortalPoint","portalCoordiantes","addFruitPoint","addBodyPoints","pointInBoard","coordinateX","coordinateY","boardMaxSizeX","boardMaxSizeY","GameBoard","setBoard","midpointX","midpointY","setBodyPoints","currentDirection","setCurrentDirection","setFruitPoint","setPortalDestination","boardGridPoints","updateHead","newX","newY","newPoint","filter","point","index","restartGame","directionAction","direction","oppositeDirection","changeOnAction","action","headX","headY","handleDirection","keyCode","useEffect","document","addEventListener","interval","setInterval","removeEventListener","clearInterval","gameBoardStyles","paddingTop","gridTemplateRows","gridTemplateColumns","BugReportDialog","text","setText","submitted","setSubmitted","handleOnClose","handleAlertClose","paper","input","Dialog","PaperProps","textAlign","aria-labelledby","DialogTitle","TextField","autoFocus","InputProps","multiline","rowsMax","marginLeft","value","onChange","Button","marginTop","marginBottom","GameOptions","setTimeHook","setHeightHook","setWidthHook","setDrawerHook","setBoundaries","min","max","setter","val","time","setTime","setHeight","setWidth","bugReport","setBugReport","changeTime","changeHeight","changeWidth","drawerHeader","display","alignItems","mixins","toolbar","justifyContent","buttonBottom","drawerPaper","background","dividerColor","Drawer","type","onKeyDown","ChevronLeft","Divider","Slider","e","valueLabelDisplay","step","styles","margin","id","BugReport","Twitter","Instagram","App","values","Provider","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.440b783e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GameInfoContext = React.createContext({\r\n  timeHook: [0.3, () => {}],\r\n  heightHook: [10, () => {}],\r\n  widthHook: [10, () => {}],\r\n  drawerHook: [false, () => {}],\r\n  themeHook: [\"dark\", () => {}]\r\n});\r\n\r\nexport default GameInfoContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport GameInfoContext from \"../context/GameInfoContext.jsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n  AppBar,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    gridRow: 1,\r\n    gridColumn: \"span 3\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  rightButton: {\r\n    marginRight: theme.spacing(0.1)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={12} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function HeaderBar(props) {\r\n  const classes = useStyles();\r\n  const githubLink = \"https://github.com/raujimenez/echosnake\";\r\n\r\n  const { drawerHook, themeHook, timeHook } = useContext(GameInfoContext);\r\n  const [theme, setTheme] = useState(themeHook[0]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  function handleThemeSwitch() {\r\n    if (theme === \"light\") {\r\n      themeHook[1](\"dark\");\r\n      setTheme(\"dark\");\r\n    } else if (theme === \"dark\") {\r\n      themeHook[1](\"light\");\r\n      setTheme(\"light\");\r\n    }\r\n  }\r\n\r\n  function handleShareClick() {\r\n    navigator.clipboard.writeText(window.location.href);\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    timeHook[1](timeHook[0] + 1000)\r\n    drawerHook[1](true)\r\n  }\r\n\r\n  const svgFill = theme === \"light\" ? \"black\" : \"whitesmoke\";\r\n  const textColor = theme === \"light\" ? \"black\" : \"whitesmoke\";\r\n  const bgColor = theme === \"light\" ? \"white\" : \"#2b2b2b\";\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        color=\"transparent\"\r\n        style={{ backgroundColor: bgColor }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleOpen}\r\n          >\r\n            <MenuIcon style={{ fill: svgFill }} />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            style={{ color: textColor }}\r\n          >\r\n            EchoSnake\r\n          </Typography>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.rightButton}\r\n            color=\"inherit\"\r\n            aria-label=\"share\"\r\n            onClick={handleShareClick}\r\n          >\r\n            <ShareIcon style={{ fill: svgFill }} />\r\n          </IconButton>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.rightButton}\r\n            color=\"inherit\"\r\n            aria-label=\"ThemeSwitch\"\r\n            onClick={handleThemeSwitch}\r\n          >\r\n            {themeHook[0] === \"light\" ? (\r\n              <Brightness4Icon />\r\n            ) : (\r\n              <Brightness3Icon style={{ fill: svgFill }} />\r\n            )}\r\n          </IconButton>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.rightButton}\r\n            color=\"inherit\"\r\n            aria-label=\"GitHub\"\r\n            href={githubLink}\r\n            target=\"_blank\"\r\n          >\r\n            <GitHubIcon style={{ fill: svgFill }} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          URL copied to clipboard\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","function boardGenerator(height, width) {\r\n  const board = [];\r\n  for (let i = 0; i < height; i++) {\r\n    board[i] = [];\r\n    for (let j = 0; j < width; j++) {\r\n      board[i][j] = {\r\n        row: i,\r\n        column: j,\r\n        isBody: false,\r\n        isFruit: false,\r\n        isPortal: false\r\n      };\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\nexport default boardGenerator;\r\n","function pointOn(bodyPoints, pointX, pointY) {\r\n  for (let bodyPoint of bodyPoints) {\r\n    if (pointX === bodyPoint[0] && pointY === bodyPoint[1]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default pointOn;\r\n","import pointOn from \"./pointOnBody.js\";\r\n\r\nfunction generateFruit(width, height, bodyPoints) {\r\n  let spawnedOnBody = true;\r\n  let finalX = 1;\r\n  let finalY = 1;\r\n  do {\r\n    // could be a better way but i am just running and gunning\r\n    const potentialX = Math.floor(Math.random() * width);\r\n    const potentialY = Math.floor(Math.random() * height);\r\n    if (!pointOn(bodyPoints, potentialX, potentialY)) {\r\n      finalX = potentialX;\r\n      finalY = potentialY;\r\n      spawnedOnBody = false;\r\n    }\r\n  } while (spawnedOnBody);\r\n\r\n  return [finalX, finalY];\r\n}\r\n\r\nexport default generateFruit;\r\n","import React, { useContext } from \"react\";\r\nimport GameInfoContext from \"../context/GameInfoContext.jsx\";\r\n\r\nfunction GridPoint(props) {\r\n  const row = props.row;\r\n  const col = props.column;\r\n  const containsBody = props.body;\r\n  const containsFruit = props.fruit;\r\n  const portalDestination = props.portalDestination;\r\n  const { themeHook } = useContext(GameInfoContext);\r\n\r\n  const GridPointStyles = {\r\n    gridRow: row,\r\n    gridColumn: col,\r\n    padding: \"10px\",\r\n    backgroundColor: containsFruit\r\n      ? \"red\"\r\n      : portalDestination\r\n      ? \"orange\"\r\n      : containsBody\r\n      ? \"green\"\r\n      : themeHook[0] === \"light\"\r\n      ? \"whitesmoke\"\r\n      : \"#383838\",\r\n    borderStyle: \"none\",\r\n    borderWidth: \"0.1px\"\r\n  };\r\n\r\n  return <div style={GridPointStyles}></div>;\r\n}\r\n\r\nexport default GridPoint;\r\n","import React from \"react\";\r\nimport GridPoint from \"../GridPoint.jsx\";\r\n\r\nfunction createGridPoints(board, bodyPoints, fruitPoint, portalDestination) {\r\n  const gridPoints = [];\r\n  for (let i = 0; i < board.length; i++) {\r\n    gridPoints.push([]);\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      gridPoints.push(\r\n        <GridPoint\r\n          key={[i, j]}\r\n          row={board[i][j].row + 1}\r\n          column={board[i][j].column + 1}\r\n          body={board[i][j].isBody}\r\n          fruit={board[i][j].isFruit}\r\n          portalDestination={board[i][j].isPortal}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return gridPoints;\r\n}\r\n\r\nexport default createGridPoints;\r\n","function addPortalPoint(board, portalCoordiantes) {\r\n  const [pointX, pointY] = portalCoordiantes;\r\n\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      board[i][j] = {\r\n        ...board[i][j],\r\n        isPortal: false\r\n      };\r\n    }\r\n  }\r\n\r\n  //const newBoard = [...board]\r\n  if (pointX !== null) {\r\n    board[pointY][pointX] = {\r\n      ...board[pointY][pointX],\r\n      isPortal: true\r\n    };\r\n  }\r\n}\r\n\r\nexport default addPortalPoint;\r\n","function addFruitPoint(board, fruitPoint) {\r\n  const pointX = fruitPoint[0];\r\n  const pointY = fruitPoint[1];\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      board[i][j] = {\r\n        ...board[i][j],\r\n        isFruit: false\r\n      };\r\n    }\r\n  }\r\n\r\n  if (pointX !== null) {\r\n    board[pointY][pointX] = {\r\n      ...board[pointY][pointX],\r\n      isFruit: true\r\n    };\r\n  }\r\n}\r\n\r\nexport default addFruitPoint;\r\n","function addBodyPoints(board, bodyPoints) {\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      board[i][j] = {\r\n        ...board[i][j],\r\n        isBody: false\r\n      };\r\n    }\r\n  }\r\n\r\n  for (let bodyPoint of bodyPoints) {\r\n    board[bodyPoint[1]][bodyPoint[0]] = {\r\n      ...board[bodyPoint[1]][bodyPoint[0]],\r\n      isBody: true\r\n    };\r\n  }\r\n}\r\n\r\nexport default addBodyPoints;\r\n","function pointInBoard(coordinateX, coordinateY, boardMaxSizeX, boardMaxSizeY) {\r\n  if (coordinateX < 0 || coordinateX > boardMaxSizeX) return false;\r\n  if (coordinateY < 0 || coordinateY > boardMaxSizeY) return false;\r\n  return true;\r\n}\r\n\r\nexport default pointInBoard;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport GameInfoContext from \"../context/GameInfoContext.jsx\";\r\n\r\nimport boardGenerator from \"./helper/boardGenerator.js\";\r\nimport generateFruit from \"./helper/generateFruit.js\";\r\nimport pointOn from \"./helper/pointOnBody.js\";\r\nimport createGridPoints from \"./helper/createGridPoints.jsx\";\r\nimport addPortalPoint from \"./helper/addPortalPoint.js\";\r\nimport addFruitPoint from \"./helper/addFruitPoint.js\";\r\nimport addBodyPoints from \"./helper/addBodyPoints.js\";\r\nimport pointInBoard from \"./helper/pointInBoard.js\";\r\n\r\nimport \"./styles/GameBoard.css\";\r\n\r\nfunction GameBoard(props) {\r\n  const [SPACE, LEFT, UP, RIGHT, DOWN] = [32, 37, 38, 39, 40];\r\n\r\n  const { timeHook, heightHook, widthHook } = useContext(GameInfoContext);\r\n\r\n  const [board, setBoard] = useState(\r\n    boardGenerator(heightHook[0], widthHook[0])\r\n  );\r\n  const midpointX = Math.floor(widthHook[0] / 2);\r\n  const midpointY = Math.floor(heightHook[0] / 2);\r\n\r\n  const [bodyPoints, setBodyPoints] = useState([[midpointX, midpointY]]);\r\n  const [currentDirection, setCurrentDirection] = useState(UP);\r\n  const [fruitPoint, setFruitPoint] = useState(\r\n    generateFruit(widthHook[0], heightHook[0], bodyPoints)\r\n  );\r\n  const [portalDestination, setPortalDestination] = useState([null, null]);\r\n\r\n  let boardGridPoints = [];\r\n\r\n  function updateHead(newX, newY) {\r\n    const newPoint = [newX, newY];\r\n    if (newPoint[0] === fruitPoint[0] && newPoint[1] === fruitPoint[1]) {\r\n      setBodyPoints([...bodyPoints, newPoint]);\r\n      setFruitPoint(generateFruit(widthHook[0], heightHook[0], bodyPoints));\r\n    } else {\r\n      setBodyPoints([\r\n        ...bodyPoints.filter((point, index) => index !== 0),\r\n        newPoint\r\n      ]);\r\n    }\r\n  }\r\n\r\n  function restartGame() {\r\n    setBodyPoints([[midpointX, midpointY]]);\r\n    setFruitPoint(generateFruit(widthHook[0], heightHook[0], bodyPoints));\r\n    setCurrentDirection(UP);\r\n    setPortalDestination([null, null]);\r\n    setBoard(boardGenerator(heightHook[0], widthHook[0]));\r\n    boardGridPoints = createGridPoints(\r\n      board,\r\n      bodyPoints,\r\n      fruitPoint,\r\n      portalDestination\r\n    );\r\n  }\r\n\r\n  function directionAction(direction, oppositeDirection, newX, newY) {\r\n    if (pointInBoard(newX, newY, widthHook[0] - 1, heightHook[0] - 1)) {\r\n      if (bodyPoints.length > 1) {\r\n        if (currentDirection !== oppositeDirection) {\r\n          if (!pointOn(bodyPoints, newX, newY)) {\r\n            setCurrentDirection(direction);\r\n            updateHead(newX, newY);\r\n          } else {\r\n            restartGame();\r\n          }\r\n        }\r\n      } else {\r\n        // single point can go in any direction\r\n        setCurrentDirection(direction);\r\n        updateHead(newX, newY);\r\n      }\r\n    } else {\r\n      restartGame();\r\n    }\r\n  }\r\n\r\n  function changeOnAction(action, headX, headY) {\r\n    if (action === LEFT) {\r\n      directionAction(LEFT, RIGHT, headX - 1, headY);\r\n    } else if (action === UP) {\r\n      directionAction(UP, DOWN, headX, headY - 1);\r\n    } else if (action === RIGHT) {\r\n      directionAction(RIGHT, LEFT, headX + 1, headY);\r\n    } else if (action === DOWN) {\r\n      directionAction(DOWN, UP, headX, headY + 1);\r\n    } else if (action === SPACE) {\r\n      if (portalDestination[0] === null) {\r\n        setPortalDestination([headX, headY]);\r\n      } else {\r\n        directionAction(\r\n          currentDirection,\r\n          -1,\r\n          portalDestination[0],\r\n          portalDestination[1]\r\n        );\r\n        setPortalDestination([null, null]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleDirection(event) {\r\n    const [headX, headY] = bodyPoints[bodyPoints.length - 1];\r\n    const action = event.keyCode;\r\n    changeOnAction(action, headX, headY);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleDirection);\r\n    const interval = setInterval(() => {\r\n      const [headX, headY] = bodyPoints[bodyPoints.length - 1];\r\n      changeOnAction(currentDirection, headX, headY);\r\n    }, timeHook[0] * 1000);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener(\"keydown\", handleDirection);\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  addBodyPoints(board, bodyPoints);\r\n  addPortalPoint(board, portalDestination);\r\n  addFruitPoint(board, fruitPoint);\r\n\r\n  boardGridPoints = createGridPoints(\r\n    board,\r\n    bodyPoints,\r\n    fruitPoint,\r\n    portalDestination\r\n  );\r\n\r\n  const gameBoardStyles = {\r\n    paddingTop: \"10px\",\r\n    gridTemplateRows: `${heightHook[0]}`,\r\n    gridTemplateColumns: `${widthHook[0]}`\r\n  };\r\n\r\n  return (\r\n    <div className=\"GameBoard\" style={gameBoardStyles}>\r\n      {boardGridPoints}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Dialog,\r\n  Button,\r\n  Typography,\r\n  DialogTitle,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={12} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function BugReportDialog(props) {\r\n  const { open, onClose, theme } = props;\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const textColor = theme === \"light\" ? \"black\" : \"whitesmoke\";\r\n  const bgColor = theme === \"light\" ? \"white\" : \"#2b2b2b\";\r\n\r\n  const handleOnClose = () => onClose(false);\r\n\r\n  // send to bug report\r\n  const handleSubmit = () => {\r\n    onClose(false);\r\n    setSubmitted(true);\r\n    setText('');\r\n  }\r\n\r\n  const handleAlertClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor: bgColor,\r\n      color: textColor\r\n    },\r\n    input: {\r\n      color: textColor\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <Dialog\r\n      PaperProps={{ style: { backgroundColor: bgColor, color: textColor } }}\r\n      style={{ textAlign: \"center\" }}\r\n      onClose={handleOnClose}\r\n      classes={classes.paper}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle>\r\n        <Typography variant=\"h5\">Describe the bug</Typography>\r\n      </DialogTitle>\r\n      <TextField\r\n        autoFocus={open}\r\n        InputProps={{ className: classes.input }}\r\n        multiline\r\n        rowsMax=\"5\"\r\n        style={{\r\n          width: \"25vw\",\r\n          padding: 10,\r\n          marginLeft: \"1vw\",\r\n          marginRight: \"1vw\"\r\n        }}\r\n        value={text}\r\n        onChange={handleChange}\r\n      />\r\n      <span>\r\n        <Button\r\n          onClick={handleOnClose}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{\r\n            marginRight: \"1vw\",\r\n            marginTop: \"1vh\",\r\n            marginBottom: \"1vh\"\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">Cancel</Typography>\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{\r\n            marginLeft: \"1vw\",\r\n            marginTop: \"1vh\",\r\n            marginBottom: \"1vh\"\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">Submit</Typography>\r\n        </Button>\r\n      </span>\r\n    </Dialog>\r\n    <Snackbar open={submitted} autoHideDuration={3000} onClose={handleAlertClose}>\r\n      <Alert onClose={handleAlertClose} severity=\"success\">\r\n        Bug Report Sent, Thanks\r\n      </Alert>\r\n    </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport GameInfoContext from \"../context/GameInfoContext.jsx\";\r\n\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  Typography,\r\n  Divider,\r\n  Slider,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  ChevronLeft,\r\n  BugReport,\r\n  Twitter,\r\n  Instagram,\r\n  GitHub\r\n} from \"@material-ui/icons\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport \"./styles/GameOptions.css\";\r\nimport BugReportDialog from \"./BugReportDialog.jsx\";\r\n\r\nfunction GameOptions(props) {\r\n  // game settings should update gameboard so we need context\r\n  const { timeHook, heightHook, widthHook, drawerHook, themeHook } = useContext(\r\n    GameInfoContext\r\n  );\r\n  const setTimeHook = timeHook[1];\r\n  const setHeightHook = heightHook[1];\r\n  const setWidthHook = widthHook[1];\r\n  const setDrawerHook = drawerHook[1];\r\n\r\n  function setBoundaries(min, max, setter) {\r\n    return function changeVal(val) {\r\n      setter(val < min ? min : val > max ? max : val);\r\n    };\r\n  }\r\n\r\n  const [time, setTime] = useState(timeHook[0]);\r\n  const [height, setHeight] = useState(heightHook[0]);\r\n  const [width, setWidth] = useState(widthHook[0]);\r\n  const [theme] = useState(themeHook[0]);\r\n  const [bugReport, setBugReport] = useState(drawerHook[0]);\r\n\r\n  const changeTime = setBoundaries(0.05, 0.55, setTime);\r\n  const changeHeight = setBoundaries(10, 30, setHeight);\r\n  const changeWidth = setBoundaries(10, 40, setWidth);\r\n\r\n  function resetSettings() {\r\n    setTime(0.3);\r\n    setHeight(20);\r\n    setWidth(25);\r\n  }\r\n\r\n  function updateGameSettingContext() {\r\n    setTimeHook(time);\r\n    setHeightHook(height);\r\n    setWidthHook(width);\r\n    setDrawerHook(false);\r\n  }\r\n\r\n  function closeHandler(event, reason) {\r\n    return function(event) {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        (event.key === \"Tab\" || event.key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n    };\r\n  }\r\n\r\n  function handleBugReportClick() {\r\n    setBugReport(true);\r\n    return;\r\n  }\r\n\r\n  const svgFill = theme === \"light\" ? \"black\" : \"whitesmoke\";\r\n  const textColor = theme === \"light\" ? \"black\" : \"whitesmoke\";\r\n  const bgColor = theme === \"light\" ? \"white\" : \"#2b2b2b\";\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\"\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(0, 1, 1, 1, 1)\r\n    },\r\n    buttonBottom: {\r\n      marginLeft: \"10px\"\r\n    },\r\n    drawerPaper: {\r\n      background: bgColor,\r\n      color: textColor\r\n    },\r\n    dividerColor: {\r\n      backgroundColor: theme === \"light\" ? \"black\" : \"grey\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  function chevronClick() {\r\n    setTimeHook(timeHook[0] - 1000);\r\n    setDrawerHook(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        classes={{ paper: classes.drawerPaper }}\r\n        open={drawerHook[0]}\r\n        onClose={closeHandler}\r\n        onKeyDown={event => setDrawerHook(false)}\r\n      >\r\n        <div>\r\n          <IconButton onClick={chevronClick}>\r\n            <ChevronLeft style={{ fill: svgFill }} />\r\n          </IconButton>\r\n        </div>\r\n        <Divider classes={{ root: classes.dividerColor }} />\r\n        <br />\r\n        <div className=\"GameOptions\">\r\n          <Typography\r\n            style={{ color: textColor }}\r\n            variant=\"h7\"\r\n            className={classes.title}\r\n          >\r\n            Time (sec)\r\n          </Typography>\r\n          <Slider\r\n            value={time}\r\n            onChange={(e, val) => changeTime(val)}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={0.05}\r\n            min={0.05}\r\n            max={0.55}\r\n          ></Slider>\r\n\r\n          <Typography\r\n            style={{ color: textColor }}\r\n            variant=\"h7\"\r\n            className={classes.title}\r\n          >\r\n            Height\r\n          </Typography>\r\n          <Slider\r\n            value={height}\r\n            onChange={(e, val) => changeHeight(val)}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={10}\r\n            max={30}\r\n          ></Slider>\r\n\r\n          <Typography\r\n            style={{ color: textColor }}\r\n            variant=\"h7\"\r\n            className={classes.title}\r\n          >\r\n            Width\r\n          </Typography>\r\n          <Slider\r\n            value={width}\r\n            onChange={(e, val) => changeWidth(val)}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={10}\r\n            max={40}\r\n          ></Slider>\r\n\r\n          <br />\r\n          <span>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={resetSettings}\r\n              styles={{ margin: \"10px\" }}\r\n            >\r\n              Reset Values\r\n            </Button>\r\n            <Button\r\n              id=\"updateButton\"\r\n              styles={{ marginLeft: \"10px\" }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={updateGameSettingContext}\r\n            >\r\n              Update Game\r\n            </Button>\r\n          </span>\r\n\r\n          {\r\n            // terrible line breaks but i just needed something quick\r\n          }\r\n          <br />\r\n          <br />\r\n\r\n          <Divider classes={{ root: classes.dividerColor }} />\r\n          <br />\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Button onClick={handleBugReportClick}>\r\n              <BugReport style={{ marginRight: \"5px\", fill: svgFill }} />\r\n              <Typography\r\n                style={{ color: textColor }}\r\n                variant=\"h7\"\r\n                className={classes.title}\r\n              >\r\n                Report a bug\r\n              </Typography>\r\n            </Button>\r\n          </div>\r\n          <br />\r\n\r\n          <Divider classes={{ root: classes.dividerColor }} />\r\n          <br />\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Typography\r\n              style={{ color: textColor }}\r\n              variant=\"h7\"\r\n              className={classes.title}\r\n            >\r\n              Get in Touch\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <span>\r\n              <Button href=\"https://github.com/raujimenez\" target=\"_blank\">\r\n                <GitHub style={{ fill: svgFill }} />\r\n              </Button>\r\n              <Button href=\"https://twitter.com/raulrusty\" target=\"_blank\">\r\n                <Twitter style={{ fill: svgFill }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://www.instagram.com/raulrusty\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram style={{ fill: svgFill }} />\r\n              </Button>\r\n            </span>\r\n            <br />\r\n            <br />\r\n\r\n            <Divider classes={{ root: classes.dividerColor }} />\r\n            <br />\r\n            <Typography\r\n              style={{ color: textColor }}\r\n              variant=\"h7\"\r\n              className={classes.title}\r\n            >\r\n              Raul Jimenez ©\r\n            </Typography>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </Drawer>\r\n      <BugReportDialog open={bugReport} onClose={setBugReport} theme={themeHook[0]} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOptions;\r\n","import React, { useState } from \"react\";\r\nimport HeaderBar from \"./components/HeaderBar.jsx\";\r\nimport GameBoard from \"./components/GameBoard.jsx\";\r\nimport GameOptions from \"./components/GameOptions.jsx\";\r\nimport GameInfoContext from \"./context/GameInfoContext.jsx\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const timeHook = useState(0.3);\r\n  const heightHook = useState(20);\r\n  const widthHook = useState(25);\r\n  const drawerHook = useState(false);\r\n  const themeHook = useState(\"dark\");\r\n\r\n  const values = {\r\n    timeHook,\r\n    heightHook,\r\n    widthHook,\r\n    drawerHook,\r\n    themeHook\r\n  };\r\n\r\n  const bgColor = themeHook[0] === \"light\" ? \"white\" : \"#1c1c1c\";\r\n\r\n  return (\r\n    <div className=\"App\" style={{ background: bgColor }}>\r\n      <GameInfoContext.Provider value={values}>\r\n        <HeaderBar />\r\n        <GameOptions />\r\n        <GameBoard />\r\n      </GameInfoContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}